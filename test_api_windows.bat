@echo off
REM Script para probar la API de Appointment Backend en Windows
REM Aseg√∫rate de que la API est√© corriendo en http://localhost:3000

set BASE_URL=http://localhost:3000
set APPOINTMENT_ID=

echo üöÄ Iniciando pruebas de la API de Appointment Backend
echo ========================================================

REM 1. Health Check
echo.
echo 1Ô∏è‚É£  Testing Health Check...
curl -s -X GET %BASE_URL%/hello

REM 2. Crear una cita
echo.
echo 2Ô∏è‚É£  Creating a new appointment...
curl -s -X POST %BASE_URL%/appointments ^
  -H "Content-Type: application/json" ^
  -d "{\"patientName\": \"Juan P√©rez\", \"patientEmail\": \"juan.perez@email.com\", \"patientPhone\": \"+34666123456\", \"doctorName\": \"Dr. Mar√≠a Garc√≠a\", \"doctorSpecialty\": \"Cardiolog√≠a\", \"appointmentDate\": \"2025-01-15\", \"appointmentTime\": \"10:00\", \"duration\": 45, \"priority\": \"high\", \"appointmentType\": \"consultation\", \"notes\": \"Primera consulta - dolor en el pecho\", \"symptoms\": \"Dolor tor√°cico, palpitaciones\", \"roomNumber\": \"205\", \"cost\": 150.00, \"insuranceInfo\": {\"provider\": \"Sanitas\", \"policyNumber\": \"POL123456\", \"coverageType\": \"Complete\"}}"

REM 3. Crear otra cita
echo.
echo 3Ô∏è‚É£  Creating another appointment...
curl -s -X POST %BASE_URL%/appointments ^
  -H "Content-Type: application/json" ^
  -d "{\"patientName\": \"Ana L√≥pez\", \"patientEmail\": \"ana.lopez@email.com\", \"doctorName\": \"Dr. Pedro Mart√≠n\", \"doctorSpecialty\": \"Dermatolog√≠a\", \"appointmentDate\": \"2025-01-16\", \"appointmentTime\": \"14:30\", \"priority\": \"medium\", \"appointmentType\": \"follow-up\", \"notes\": \"Seguimiento de tratamiento\"}"

REM 4. Crear una tercera cita
echo.
echo 4Ô∏è‚É£  Creating a third appointment...
curl -s -X POST %BASE_URL%/appointments ^
  -H "Content-Type: application/json" ^
  -d "{\"patientName\": \"Carlos Ruiz\", \"patientEmail\": \"carlos.ruiz@email.com\", \"doctorName\": \"Dr. Mar√≠a Garc√≠a\", \"doctorSpecialty\": \"Cardiolog√≠a\", \"appointmentDate\": \"2025-01-17\", \"appointmentTime\": \"09:15\", \"priority\": \"urgent\", \"appointmentType\": \"emergency\", \"notes\": \"Emergencia card√≠aca\"}"

REM 5. Listar todas las citas
echo.
echo 5Ô∏è‚É£  Listing all appointments...
curl -s -X GET "%BASE_URL%/appointments"

REM 6. Listar citas con filtros
echo.
echo 6Ô∏è‚É£  Listing appointments with filters...
curl -s -X GET "%BASE_URL%/appointments?doctorName=Garc√≠a&includeStats=true"

REM 7. Obtener estad√≠sticas
echo.
echo 7Ô∏è‚É£  Getting appointment statistics...
curl -s -X GET "%BASE_URL%/appointments/stats"

REM 8. Listar citas con paginaci√≥n
echo.
echo 8Ô∏è‚É£  Listing appointments with pagination...
curl -s -X GET "%BASE_URL%/appointments?page=1&limit=2&includeStats=true"

REM 9. Probar filtros por fecha
echo.
echo 9Ô∏è‚É£  Testing date filters...
curl -s -X GET "%BASE_URL%/appointments?dateFrom=2025-01-15&dateTo=2025-01-17"

echo.
echo ‚úÖ Pruebas completadas!
echo ========================================================
echo üìã Resumen de endpoints probados:
echo    ‚úì GET /hello
echo    ‚úì POST /appointments
echo    ‚úì GET /appointments
echo    ‚úì GET /appointments?filters
echo    ‚úì GET /appointments/stats
echo.
echo üîß Para ejecutar este script:
echo    test_api_windows.bat
echo.
echo üìù Nota: Este script usa curl. Aseg√∫rate de tenerlo instalado
echo    Si no tienes curl, puedes usar Postman o Thunder Client en VS Code

pause